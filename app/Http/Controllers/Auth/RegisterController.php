<?php

namespace App\Http\Controllers\Auth;

use App\Http\Controllers\Controller;
use App\Providers\RouteServiceProvider;
use App\User;
use Illuminate\Foundation\Auth\RegistersUsers;
use Illuminate\Support\Facades\Hash;
use Illuminate\Support\Facades\Validator;
//use Illuminate\Support\Str;

class RegisterController extends Controller
{
    /*
    |--------------------------------------------------------------------------
    | Register Controller
    |--------------------------------------------------------------------------
    |
    | This controller handles the registration of new users as well as their
    | validation and creation. By default this controller uses a trait to
    | provide this functionality without requiring any additional code.
    |
    */

    use RegistersUsers;

    /**
     * Where to redirect users after registration.
     *
     * @var string
     */
    protected $redirectTo = RouteServiceProvider::HOME;

    /**
     * Create a new controller instance.
     *
     * @return void
     */
    public function __construct()
    {
        $this->middleware('guest');
    }

    /**
     * Get a validator for an incoming registration request.
     *
     * @param  array  $data
     * @return \Illuminate\Contracts\Validation\Validator
     */
    protected function validator(array $data)
    {
        return Validator::make($data, [
            'name' => ['required', 'string', 'max:255'],
            //'email' => ['required_without:mobile','nullable','email','unique:users'], 
            'email' =>'required_without:mobile|nullable|email|max:255|unique:users',           
            'mobile' =>'required_without:email|nullable|numeric|digits_between:10,15|unique:users',
            //'mobile' => ['required_without:email','min:10','max:20','unique:users'],
            'password' => ['required', 'string', 'min:8', 'confirmed'],
        ]);
    }

    /**
     * Create a new user instance after a valid registration.
     *
     * @param  array  $data
     * @return \App\User
     */
    protected function create(array $data)
    {
        /* 
        * Autogenerated email to make not null fields
        if(empty($data['email'])){
            $uniq = rand('11111','99999'); // str_random(5); //time();
            $uniq_email  = str_slug($data['name'],'.').$uniq.'@me.com';       
            $data['email'] = $uniq_email;            
        }
        */

      
        return User::create([
            'name' => $data['name'],
            'email' => $data['email'],
            'mobile' => $data['mobile'],
            'password' => Hash::make($data['password']),
        ]);
    }

    public function github($provider){
        //return Socialite::driver('github')->redirect();

    }
    public function githubRedirect(){
        //$user = Socialite::driver('github')->user();
    }

    
}
